---
# tasks file for egeneralov.postgresql

- name: "Assert if {{ pgdg_version }} is supported by role"
  assert:
    that:
      - "pgdg_version in pgdg_supported_versions"
    fail_msg: "{{ pgdg_version }} is not supported version"
    success_msg: "Provisioning postgresql=={{ pgdg_version }}"

- name: Install https transport and privacy guard tools
  apt:
    update_cache: yes
    cache_valid_time: 3600
    name:
      - apt-transport-https
      - gnupg2

- name: Import postgresql repository key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
  register: pgdg_repo_key

- name: Add postgresql repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
  register: pgdg_repo

- name: Update apt cache
  apt:
    update_cache: yes
  when: pgdg_repo is changed or pgdg_repo_key is changed

- name: Install postgresql
  apt:
    name:
      - "postgresql-{{ pgdg_version }}"
      - "postgresql-common"
      - "postgresql-doc-{{ pgdg_version }}"
      - "postgresql-client-{{ pgdg_version }}"
      - "postgresql-server-dev-{{ pgdg_version }}"
      - "postgresql-{{ pgdg_version }}-pg-stat-kcache"

- name: Install tools
  apt:
    name:
      - "python-psycopg2"
      - "sudo"

- name: postgresql.conf
  lineinfile:
    path: "/etc/postgresql/{{ pgdg_version }}/main/postgresql.conf"
    regexp: '#?{{ item.k }} =.*'
    line: '{{ item.k }} = {{ item.v }}'
    state: "{{ item.state | default('present') }}"
  with_items: "{{ pgdg_postgresql_conf }}"
  register: pgdg_conf

- name: pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ pgdg_version }}/main/pg_hba.conf"
  register: pgdg_hba

- name: Restart postgresql
  systemd:
    name: "postgresql@{{ pgdg_version }}-main.service"
    state: restarted
  when: pgdg_conf is changed or pgdg_hba is changed

- name: create users
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    state: "{{ item.state | default('present') }}"
  with_items:
    - "{{ pgdg_users }}"

- name: create databases
  become: true
  become_user: postgres
  postgresql_db:
    encoding: UTF-8
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
  with_items:
    - "{{ pgdg_databases }}"
